[gd_scene load_steps=7 format=2]

[ext_resource path="res://Core/World/Player -Carlos/YetiWalkSheet.png" type="Texture" id=1]
[ext_resource path="res://Core/World/Player -Carlos/sprite.gd" type="Script" id=2]
[ext_resource path="res://Core/World/Player -Carlos/Foot/Footprints.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D



#CHILD NODES TO load
var footprints
var sprite
var area_2D


#EXPORTED
export(String) var facing = \"south\"
# 	north
# 	east
# 	south
# 	west
export(String) var animation_state



# 	idle
# 	walking
# 	hidden
var cover = null
var hide_speed = .2
export(String) var character_state = \"normal\"





#	normal
# 	locked
#	danger
#	involuntary
export(float) var speed = 4
export(float) var animation_speed = 0.1


export(float) onready var priority = 100
onready var type = Globals.DETECTABLE.PLAYER

#PRIVATES

var movement : Vector2 = Vector2(0,0)


export(float) var foot_print_distance = 20
var _last_foot_pos = Vector2(INF, INF)

var can_move = true

func _ready():
	call_deferred(\"_post_ready\")

func _post_ready():
	# load nodes
	#footprints = preload(\"Footprints.tscn\").instance()
	footprints = get_node(\"Footprints\")
	sprite = get_node(\"sprite\")
	area_2D = get_node(\"area_2D\")
	add_to_group(\"detectable\")



func _process(dt):
	if not Vectors.close_enough(_last_foot_pos, global_position, foot_print_distance):
		footprints.add(facing)
		_last_foot_pos = global_position
	

func _physics_process(dt):

	input_handler()

	match(character_state): #str comparison lol				
		\"locked\":
			pass
			#_player_set_locked()
		\"danger\":
			pass
			#_player_danger()
		\"involuntary\":
			pass
			#_player_involuntary()
		\"hidden\":
			_player_hidden()
					
		\"enable_hide\":    #DISPLAY UI HERE
			_player_enable_hide()
			continue #also do normal movement

		\"normal\":
			_player_normal()	

			
			#_player_involuntary()

			



func input_handler():

	movement = Vector2(0,0)

	#movement input
	if Input.is_action_pressed(\"player_up\"):
		animation_state = \"walking\"
		facing = \"north\"
		movement.y -= 1

	if Input.is_action_pressed(\"player_down\"):
		animation_state = \"walking\"
		facing = \"south\"
		movement.y += 1

	if Input.is_action_pressed(\"player_left\"):
		animation_state = \"walking\"
		facing = \"west\"
		movement.x -= 1

	if Input.is_action_pressed(\"player_right\"):
		animation_state = \"walking\"
		facing = \"east\"
		movement.x += 1

	#NO net movement
	if movement==Vector2(0,0):
		animation_state = \"idle\"
		movement = Vector2(0,0)


	movement = movement.normalized()



func _player_lock():
	can_move = false

func _player_unlock():
	can_move = true

func _player_set_visible():
	$sprite.visible = true

func _player_set_invisible():
	$sprite.visible = false


#states
func _player_normal():
	move_and_slide(movement*250)
	pass

func _player_danger():
	#no movement
	pass

func _player_enable_hide():
	if Input.is_action_just_released(\"ui_accept\"):
		character_state = \"hidden\"
		
	if cover != null and not cover.area.overlaps_body(self): # goes outside
		character_state = \"normal\"		
		cover = null


func _player_hidden():
	if cover != null :	
		global_position = lerp(global_position, cover.global_position, hide_speed)
		if Vectors.close_enough(global_position, cover.global_position):
			cover.z_index = 2
		priority = -1
		
	if Input.is_action_just_released(\"ui_accept\"):
		character_state = \"normal\"
		priority = 100
		cover.z_index = 0
	

func player_hide(cover):
	if character_state != \"hidden\":
		self.cover = cover
		character_state = \"enable_hide\"


func objective():
	pass

	
	
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 19, 17 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 13, 8 )

[node name="Player" type="KinematicBody2D"]
light_mask = 4
collision_layer = 2
collision_mask = 61
script = SubResource( 1 )

[node name="sprite" type="Sprite" parent="."]
z_index = 1
texture = ExtResource( 1 )
vframes = 4
hframes = 8
script = ExtResource( 2 )

[node name="area_2D" type="Area2D" parent="."]

[node name="area_collision_shape" type="CollisionShape2D" parent="area_2D"]
position = Vector2( 0, -0.5 )
shape = SubResource( 2 )

[node name="kinematic_collision_shape" type="CollisionShape2D" parent="."]
position = Vector2( 0, 8.5 )
shape = SubResource( 3 )

[node name="Footprints" parent="." instance=ExtResource( 3 )]

